generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Persona {
  id_persona   Int         @id @default(autoincrement())
  nombre       String
  apellido     String?
  cedula       String?     @unique
  correo       String?
  tipo_persona TipoPersona
  estado       Boolean     @default(true)
  codigoqr     CodigoQR[]

  @@map("persona")
}

model CodigoQR {
  id_codigo   Int       @id @default(autoincrement())
  codigo      String    @unique
  tipo_qr     TipoQR
  max_usos    Int       @default(1)
  usos_actual Int       @default(0)
  personaId   Int?
  persona     Persona?  @relation(fields: [personaId], references: [id_persona])
  ingresos    Ingreso[]
  ventas      VentaAdicional[]

  @@index([personaId], map: "codigoqr_personaId_fkey")
  @@map("codigoqr")
}

model Ingreso {
  id_ingreso Int      @id @default(autoincrement())
  fecha      DateTime @default(now())
  codigoqrId Int
  codigoqr   CodigoQR @relation(fields: [codigoqrId], references: [id_codigo])

  @@index([codigoqrId], map: "ingreso_codigoqrId_fkey")
  @@map("ingreso")
}

model Importacion {
  id              Int      @id @default(autoincrement())
  archivo         String
  usuario         String?
  fecha           DateTime @default(now())
  total_registros Int      @default(0)
  exitosos        Int      @default(0)
  fallidos        Int      @default(0)
  errores         Json?

  @@map("importacion")
}

model CajaTurno {
  id         Int              @id @default(autoincrement())
  abierto    Boolean          @default(true)
  abiertoPor String?
  cerradoPor String?
  abiertoAt  DateTime         @default(now())
  cerradoAt  DateTime?
  ventas     VentaAdicional[]

  @@map("caja_turno")
}

model VentaAdicional {
  id               Int       @id @default(autoincrement())
  codigoId         Int
  cajaId           Int
  precio           Decimal   @db.Decimal(10, 2)
  cantidad         Int       @default(1)
  correo           String?
  enviadoPorCorreo Boolean   @default(false)
  createdAt        DateTime  @default(now())
  codigo           CodigoQR  @relation(fields: [codigoId], references: [id_codigo])
  caja             CajaTurno @relation(fields: [cajaId], references: [id])

  @@index([codigoId])
  @@index([cajaId])
  @@map("venta_adicional")
}

model Configuracion {
  clave         String   @id
  valor         String
  actualizadoEn DateTime @default(now())

  @@map("configuracion")
}

enum TipoPersona {
  estudiante
  familiar
  visitante
}

enum TipoQR {
  est
  fam
  vis
}
